<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Macro CASE, CCASE, ECASE</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_when_.htm">
<LINK REL=UP HREF="c_data_a.htm">
<LINK REL=NEXT HREF="m_tpcase.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="m_when_.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_data_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="m_tpcase.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="case"><A NAME="ccase"><A NAME="ecase"><I>Macro</I> <B>CASE, CCASE, ECASE</B></A></A></A> <A NAME="otherwise"></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>case</B> <I>keyform {<I>normal-clause</I>}<B>*</B> [<I>otherwise-clause</I>]</I> =&gt; <I><I>result</I><B>*</B></I><P>
 
<B>ccase</B> <I>keyplace {<I>normal-clause</I>}<B>*</B></I> =&gt; <I><I>result</I><B>*</B></I><P>
 
<B>ecase</B> <I>keyform {<I>normal-clause</I>}<B>*</B></I> =&gt; <I><I>result</I><B>*</B></I><P>
 <P>
<PRE>
normal-clause::= (keys form*) 
</PRE>
 <PRE>
otherwise-clause::= ({otherwise | t} form*) 
</PRE>
 <PRE>
clause::= normal-clause | otherwise-clause 
</PRE>
  <P>
<P><B>引数と値</B><P>
 <P>
<I>keyform</I>--- 実行時に<I>test-key</I>を生成する<A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<I>keyplace</I>--- 実行時のはじめに<I>test-key</I>を生成する<A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <I>keys</I>に一致するものがないときには、あとで可能な<A REL=DEFINITION HREF="26_glo_p.htm#place"><I>place</I></A>を使う<P>
<I>test-key</I>---<I>keyform</I> や <I>keyplace</I> が実行時に生成したobject. <P>
<I>keys</I>---<A REL=DEFINITION HREBody/F="26_glo_o.htm#object"><I>objects</I></A>の<A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>への<A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A>. <A REL=DEFINITION HREF="#case"><B>case</B></A>の場合では,<A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbols</I></A> <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A> と <A REL=DEFINITION HREF="#otherwise"><B>otherwise</B></A> は <I>keys</I> <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A>として使用できない. それ自身が<I>keys</I>となるこれらの<A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbols</I></A>を参照する場合, designators <TT>(t)</TT> と <TT>(otherwise)</TT>, respectively, かわりに使わなくてはならない. <P>
<I>forms</I>---<A REL=DEFINITION HREF="26_glo_i.htm#implicit_progn"><I>implicit progn</I></A>. <P>
<I>results</I>---<I>clause</I>に一致したformsの返す
<A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>. <P>
<P><B>Description:</B><P>
 <P>
これらの<A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macros</I></A>は <I>test-key</I>と一致する<I>clause</I>を選択し, 選択された<I>forms</I>を実行する. <P>
<I>keyform</I> や <I>keyplace</I> は <I>実行されると</I> <I>test-key</I>を生成する. <P>
<I>normal-clauses</I>はそれぞれ順番に評価される. <I>test-key</I>が節の<A REL=DEFINITION HREF="26_glo_k.htm#key"><I>key</I></A>と<A REL=DEFINITION HREF="26_glo_s.htm#same"><I>同じ</I></A>場合, その<I>節</I>の<I>forms</I> は<A REL=DEFINITION HREF="26_glo_i.htm#implicit_progn"><I>implicit progn</I></A>として<I>評価され</I>, その<A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>の返す<A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>が<A REL=DEFINITION HREF="#case"><B>case</B></A>, <A REL=DEFINITION HREF="#ccase"><B>ccase</B></A>, あるいは <A REL=DEFINITION HREF="#ecase"><B>ecase</B></A>の戻り値となる . <P>
節に一致しなかったときに, これらの<A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macros</I></A>の<I>振舞い</I>に特に違いがでる. <P>
<P><DL><P>
<DT><A REL=DEFINITION HREF="#case"><B>case</B></A>  <P><DD>
<I>通常の節</I>に一致しなかったとき, <I>otherwise-clause</I>があれば, <I>otherwise-clause</I>に自動的に一致する. その<I>節</I>の<I>forms</I>が<A REL=DEFINITION HREF="26_glo_i.htm#implicit_progn"><I>implicit progn</I></A>として<I>評価され</I>, <A REL=DEFINITION HREF="#case"><B>case</B></A>の戻り値として<A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>を返す. <P>
<I>otherwise-clause</I>がない場合, <A REL=DEFINITION HREF="#case"><B>case</B></A>は<A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>を返す. <P>
<DT><A REL=DEFINITION HREF="#ccase"><B>ccase</B></A>  <P><DD>
      <I>normal-clause</I>に一致しない場合, <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A>の<A REL=DEFINITION HREF="26_glo_c.htm#correctable"><I>correctable</I></A> <A REL=DEFINITION HREF="26_glo_e.htm#error"><I>error</I></A>として<A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A>がシグナルされる. The offending データが その<I>test-key</I>であり, and the expected type is <A REL=DEFINITION HREF="26_glo_t.htm#type_equivalent"><I>type equivalent</I></A> to <TT>(member </TT><I>key1</I><TT> </TT><I>key2</I><TT> ...)</TT>. The <A REL=DEFINITION HREF="a_store_.htm#store-value"><B>store-value</B></A> <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restart</I></A>でエラーをただしく使えるようにできる. <P>
<A REL=DEFINITION HREF="a_store_.htm#store-value"><B>store-value</B></A> <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restart</I></A>が実行された場合, その <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>引数</I></A>が新しい<I>test-key</I>となり, <TT>(setf </TT><I>keyplace</I><TT> </TT><I>test-key</I><TT>)</TT>のように<I>keyplace</I>に保持される. <A REL=DEFINITION HREF="#ccase"><B>ccase</B></A>の再実行時には, それぞれの<I>節</I>が新しくなったっと考える. <P>
caseがない場合でも<I>keyplace</I>のサブフォームが再度評価されるかもしれない.<P>
<DT><A REL=DEFINITION HREF="#ecase"><B>ecase</B></A>  <P><DD>
<I>通常の節</I>に一致しない場合には, <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A>の<A REL=DEFINITION HREF="26_glo_n.htm#non-correctable"><I>non-correctable</I></A> <A REL=DEFINITION HREF="26_glo_e.htm#error"><I>error</I></A>がシグナルされる. The offendingデータがその<I>test-key</I>であり予期した型の場合は<A REL=DEFINITION HREF="26_glo_t.htm#type_equivalent"><I>type equivalent</I></A> to <TT>(member </TT><I>key1</I><TT> </TT><I>key2</I><TT> ...)</TT>. <P>
<A REL=DEFINITION HREF="#ccase"><B>ccase</B></A>と対照的なのは, <A REL=DEFINITION HREF="#ecase"><B>ecase</B></A>では一致するものがなかった時には何も返さなようになっているという点である. <P>
<P></DL><P>
<P><B>Examples:</B><P>
 <P>
<PRE>
 (dolist (k '(1 2 3 :four #\v () t 'other))
    (format t &quot;~S &quot;
       (case k ((1 2) 'clause1)
               (3 'clause2)
               (nil 'no-keys-so-never-seen)
               ((nil) 'nilslot)
               ((:four #\v) 'clause4)
               ((t) 'tslot)
               (otherwise 'others)))) 
&gt;&gt;  CLAUSE1 CLAUSE1 CLAUSE2 CLAUSE4 CLAUSE4 NILSLOT TSLOT OTHERS 
=&gt;  NIL
 (defun add-em (x) (apply #'+ (mapcar #'decode x)))
=&gt;  ADD-EM
 (defun decode (x)
   (ccase x
     ((i uno) 1)
     ((ii dos) 2)
     ((iii tres) 3)
     ((iv cuatro) 4)))
=&gt;  DECODE
 (add-em '(uno iii)) =&gt;  4
 (add-em '(uno iiii))
&gt;&gt;  Error: The value of X, IIII, is not I, UNO, II, DOS, III,
&gt;&gt;         TRES, IV, or CUATRO.
&gt;&gt;   1: Supply a value to use instead.
&gt;&gt;   2: Return to Lisp Toplevel.
&gt;&gt;  Debug&gt; :CONTINUE 1
&gt;&gt;  Value to evaluate and use for X: 'IV
=&gt;  5
</PRE>
</TT> <P>
<P><B>Side Effects:</B><P>
 <P>
デバッガに入ったときにあらわれる. <A REL=DEFINITION HREF="a_store_.htm#store-value"><B>store-value</B></A> が <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restart</I></A>が実行された場合, その<I>keyplace</I>の<A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> は変化するかもしれない. <P>
<P><B>Affected By:</B><P>
 <P>
<A REL=DEFINITION HREF="#ccase"><B>ccase</B></A> と <A REL=DEFINITION HREF="#ecase"><B>ecase</B></A>では, シグナルやエラーがおこると, すでに存在している<I>handlers</I>と<A REL=DEFINITION HREF="v_debug_.htm#STdebug-ioST"><B>*debug-io*</B></A>に影響をあたえる可能性がある. <P>
<P><B>Exceptional Situations:</B><P>
 <P>
<A REL=DEFINITION HREF="#ccase"><B>ccase</B></A> と <A REL=DEFINITION HREF="#ecase"><B>ecase</B></A> では通常節に一致しない場合, <I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A>のシグナルやエラーが発生する. <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="m_cond.htm#cond"><B>cond</B></A>, <A REL=DEFINITION HREF="m_tpcase.htm#typecase"><B>typecase</B></A>, <A REL=DEFINITION HREF="m_setf_.htm#setf"><B>setf</B></A>, <A REL=CHILD HREF="05_a.htm">Section 5.1 (Generalized Reference)</A> <P>
<P><B>Notes:</B><P>
 <P>
<PRE>
(case test-key
  {((key*) form*)}*)
== 
(let ((#1=#:g0001 test-key))
  (cond {((member #1# '(key*)) form*)}*))
</PRE>
</TT> <P>
<A REL=DEFINITION HREF="#ecase"><B>ecase</B></A> と <A REL=DEFINITION HREF="#ccase"><B>ccase</B></A> のエラーメッセージは実装によって異なる. これはエラーメッセージの語句をとりあるかうような場合には重要であり, そのような場合は<A REL=DEFINITION HREF="#case"><B>case</B></A> の <I>otherwise-clause</I> を使って厳密にシグナルやエラーを使ってメッセージを適切扱う方がよい. <P>
<HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
